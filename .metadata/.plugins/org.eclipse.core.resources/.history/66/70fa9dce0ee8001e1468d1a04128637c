package com.insuranceapp.controllers;

import java.net.http.HttpHeaders;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.insuranceapp.model.Insurance;
import com.insuranceapp.service.IInsuranceService;
@RestController
@RequestMapping("/insurance-api/v1")
public class InsuranceController {
	
	@Autowired
	IInsuranceService insuranceService;
	
	@PostMapping("/insurances")
	ResponseEntity<Void>addInsurance(@RequestBody Insurance insurance){
		insuranceService.addInsurance(insurance);
		return ResponseEntity.status(HttpStatusCode.valueOf(201)).build();
	}
	
	@PutMapping("/insurances")
	ResponseEntity<Void>updateInsurance(@RequestBody Insurance insurance){
		insuranceService.updateInsurance(insurance.getInsuranceId(),insurance.getPremiun());
		return ResponseEntity.accepted().build();
	}
	@DeleteMapping("/insurances/insurance-id/{insuranceId}")
	ResponseEntity<Void>deleteInsurance(@PathVariable("insuranceId")int insuranceId){
		insuranceService.deleteInsurance(insuranceId);
		return ResponseEntity.ok().build();
	}
	@GetMapping("/insurances")
	ResponseEntity<List<Insurance>>getAll(){
		HttpHeaders headers = new HttpHeaders();
		headers.add("info", "returning list of insurances");
		headers.add("desc", "All insurances from db");
		
	List<Insurance>insurances = insuranceService.getAll();
	ResponseEntity<List<Insurance>>entity= new ResponseEntity<>(insurances,headers,Http)	
	return entity;	
	}
	@GetMapping("/insurances/brand/{brand}")
	List<Insurance> getByBrand(@PathVariable("brand")String brand){
		return insuranceService.getByBrand(brand);
	}
	//@GetMapping("/insurances/brand/{brand}/type")
}
